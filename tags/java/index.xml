<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Development Cheat Sheets</title><link>http://example.org/tags/java/index.html</link><description>Recent content in java on Development Cheat Sheets</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="http://example.org/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>(Apache) Tomcat</title><link>http://example.org/languages/java/tomcat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/tomcat/index.html</guid><description>&lt;p>Apache Tomcat is a free and open-source implementation of the Jakarta Servlet, Jakarta Expression Language, and WebSocket technologies.
It provides a &amp;ldquo;pure Java&amp;rdquo; HTTP web server environment in which Java code can also run.&lt;/p></description></item><item><title>AssertJ</title><link>http://example.org/languages/java/assertj/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/assertj/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of the AssertJ test library. The AssertJ library is a fluent API to help create readable assertions within you Java unit tests.
Testing thrown exceptions - AssertThatThrownBy() import static org.assertj.core.api.Assertions.assertThatThrownBy; @Test void test_methodShouldThrowException(){ assertThatThrownBy(() -&amp;gt; { List&amp;lt;String&amp;gt; list = Arrays.asList(&amp;#34;String one&amp;#34;, &amp;#34;String two&amp;#34;); list.get(2); }).isInstanceOf(IndexOutOfBoundsException.class) .hasMessageContaining(&amp;#34;Index: 2, Size: 2&amp;#34;); } Testing methods that don&amp;rsquo;t return a value import static org.</description></item><item><title>Class</title><link>http://example.org/languages/java/class/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/class/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of Java&amp;rsquo;s Class class/API.
getCanonicalName() Returns the full classname including package.
LOGGER.info(&amp;#34;ClassName is: &amp;#34; + this.getClass().getCanonicalName());</description></item><item><title>Collections</title><link>http://example.org/languages/java/collections/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/collections/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of collections in Java.
Arrays Arrays.asList(array) Converts an array of objects into a list, great one-liner to use when you need to iterate over the array.
// Great way to create a collection within one line List&amp;lt;String&amp;gt; strings = Arrays.asList(&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;); Sets Copying/Cloning Sets Copy Constructor One way of copying a Set is to use the copy constructor of a Set implementation.</description></item><item><title>Concurrency</title><link>http://example.org/languages/java/concurrency/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/concurrency/index.html</guid><description>Java Concurrency This page contains information, syntax, and simple code examples, about the use of Java&amp;rsquo;s concurrency functionality.
Common ForkJoin Pool Java has a common static ForkJoin pool which is appropriate for most applications.
Using the common pool normally reduces resource usage (its threads are slowly reclaimed during periods of non-use, and reinstated upon subsequent use).
In practice what this means is there is an easy way to submit tasks to a background thread without needing to deal with the complexities of an ExecutorService.</description></item><item><title>Immutables</title><link>http://example.org/languages/java/immutables/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/immutables/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of the Immutables library.
Java annotation processors to generate simple, safe and consistent value objects. Do not repeat yourself, try Immutables, the most comprehensive tool in this field!</description></item><item><title>IntelliJ</title><link>http://example.org/tools/intellij/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/tools/intellij/index.html</guid><description>&lt;p>&lt;strong>IntelliJ IDEA&lt;/strong> is an integrated development environment written in Java for developing computer software. It is developed by JetBrains, and is available as an Apache 2 Licensed community edition, and in a proprietary commercial edition. Both can be used for commercial development.&lt;/p></description></item><item><title>Java</title><link>http://example.org/languages/java/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/index.html</guid><description>&lt;p>Java is a general-purpose programming language that is class-based, object-oriented, and designed to have as few implementation dependencies as possible. It is intended to let application developers write once, run anywhere, meaning that compiled Java code can run on all platforms that support Java without the need for recompilation&lt;/p></description></item><item><title>JavaFX</title><link>http://example.org/languages/java/javafx/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/javafx/index.html</guid><description>&lt;p>JavaFX is a software platform for creating and delivering desktop applications, as well as rich Internet applications (RIAs) that can run across a wide variety of devices. JavaFX is intended to replace Swing as the standard GUI library for Java SE.&lt;/p></description></item><item><title>JPA</title><link>http://example.org/languages/java/jpa/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/jpa/index.html</guid><description>Java Persistence API (JPA) This page contains information, syntax, and simple code examples, about the use of the Java Persistence API (JPA).
Case-insensitive like matching To make your query case-insensitive, convert both your keyword and the compared field to lower case:
query.where( builder.or( builder.like( builder.lower( root.get( type.getDeclaredSingularAttribute(&amp;#34;username&amp;#34;, String.class) ) ), &amp;#34;%&amp;#34; + keyword.toLowerCase() + &amp;#34;%&amp;#34; ) ); &amp;#39;&amp;#39;&amp;#39;</description></item><item><title>Marshalling XML in SpringBoot</title><link>http://example.org/languages/java/spring-boot/xml-marshalling/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/xml-marshalling/index.html</guid><description>&lt;p>This page contains information, syntax, and simple code examples, about un/marshalling XML in SpringBoot.&lt;/p></description></item><item><title>Maven</title><link>http://example.org/tools/maven/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/tools/maven/index.html</guid><description>&lt;p>Maven is a build automation tool used primarily for Java projects. Maven can also be used to build and manage projects written in C#, Ruby, Scala, and other languages. The Maven project is hosted by the Apache Software Foundation, where it was formerly part of the Jakarta Project.&lt;/p></description></item><item><title>NIO2</title><link>http://example.org/languages/java/nio_2/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/nio_2/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of Java&amp;rsquo;s NIO2 API.
The new API was introduced in Java 7 and provides methods that make working with files and filesystems much easier.
Current Directory The Paths API can be used to get the current working directory:
String workingDirectory = Paths.get(&amp;#34;&amp;#34;) .toAbsolutePath() .toString(); System.out.println(&amp;#34;PWD: &amp;#34; + workingDirectory);</description></item><item><title>openHAB</title><link>http://example.org/tools/openhab/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/tools/openhab/index.html</guid><description>&lt;p>Open Home Automation Bus (&lt;a href="https://www.openhab.org/" target="_blank">openHAB&lt;/a>) is an open source home automation software written in Java.
It is deployed on premises and connects to devices and services from different vendors.&lt;/p></description></item><item><title>Record</title><link>http://example.org/languages/java/record/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/record/index.html</guid><description>&lt;p>&lt;a href="https://docs.oracle.com/en/java/javase/14/language/records.html" target="_blank">Records&lt;/a> were introduced in JDK 14 and are a new type
to assist with creating &amp;lsquo;data carrier&amp;rsquo; objects.&lt;/p></description></item><item><title>Spring Boot</title><link>http://example.org/languages/java/spring-boot/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/index.html</guid><description>&lt;p>The index page for about the use of Spring Boot.&lt;/p></description></item><item><title>SpringBoot Actuators</title><link>http://example.org/languages/java/spring-boot/actuator/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/actuator/index.html</guid><description>This page contains information, syntax, and simple code examples, about Springboots&amp;rsquo; actuator.
Springboots&amp;rsquo; actuator adds production-ready features to our application. When you add the actuator dependency functions such as monitoring, gathering metrics, understanding traffic, or the state of ths database becomes much much easier.
Adding Actuator To enable Spring Boot Actuator, just need add the spring-boot-actuator dependency to your project.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; Endpoints There are a heap of endpoints available, but by default only the /health endpoint is exposed.</description></item><item><title>SpringBoot Maven plugin</title><link>http://example.org/languages/java/spring-boot/maven-integration/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/maven-integration/index.html</guid><description>This page contains information, syntax, and simple code examples, about using the spring-boot-maven-plugin.
Creating runnable &amp;lsquo;fat&amp;rsquo; jar ... &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${springboot.version}&amp;lt;/version&amp;gt; &amp;lt;!-- Create a runnable fat jar --&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;repackage&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt;</description></item><item><title>SpringBoot Properties</title><link>http://example.org/languages/java/spring-boot/properties/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/properties/index.html</guid><description>&lt;p>This page contains information, syntax, and simple code examples, about the use of &lt;strong>properties&lt;/strong> in SpringBoot.&lt;/p></description></item><item><title>SpringBoot Security</title><link>http://example.org/languages/java/spring-boot/security/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/security/index.html</guid><description>&lt;p>This page contains information, syntax, and simple code examples, about &lt;strong>security&lt;/strong> in SpringBoot.&lt;/p></description></item><item><title>SpringBoot Soap WS</title><link>http://example.org/languages/java/spring-boot/soap-ws/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/soap-ws/index.html</guid><description>This page contains information, syntax, and simple code examples, about creating (and using) SOAP ws services in SpringBoot.
Servlet Registration To be able to register (and expose) the servlet you will need to create a ServletRegistrationBean.
@EnableWs @Configuration public class CustomWsConfigurerAdapter extends WsConfigurerAdapter { @Bean(name = &amp;#34;helloServletRegistration&amp;#34;) public ServletRegistrationBean&amp;lt;MessaheDisplatcherServlet&amp;gt; helloServletRegistration(ApplicationContext applicationContext) { MessageDisplatcherServlet servlet = new MessageDisplatcherServlet(); servlet.setApplicationContext(applicationContext); servlet.setTransformWsdlLocations(true); servlet.setTransformSchemaLocations(true); // Log the request details servlet.setEnableLoggingRequestDetails(true); return new ServletRegistrationBean&amp;lt;&amp;gt;(servlet, &amp;#34;/ws/*&amp;#34;); } } Exposing the WSDL To expose the WSDL file within your application you will need to create a bean as follows:</description></item><item><title>SpringBoot Task Scheduling</title><link>http://example.org/languages/java/spring-boot/scheduler/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/scheduler/index.html</guid><description>This page contains information, syntax, and simple code examples, about Springs&amp;rsquo; Task scheduling.
Basic Example First make sure to add the @EnableScheduling annotation to one of your configuration classes:
@Configuration @EnableScheduling public class MySpringConfig{ ... } @Component public class ScheduledTasks { private static final Logger log = LoggerFactory.getLogger(ScheduledTasks.class); private static final SimpleDateFormat dateFormat = new SimpleDateFormat(&amp;#34;HH:mm:ss&amp;#34;); @Scheduled(fixedRate = 5000) public void reportCurrentTime() { log.info(&amp;#34;The time is now {}&amp;#34;, dateFormat.format(new Date())); } } Troubleshooting My Scheduled Task runs twice Make sure that you do not use the @Scheduled annotation within a configuration class (such as one annotated with @Configuration).</description></item><item><title>SpringBoot Web Services</title><link>http://example.org/languages/java/spring-boot/web-services/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/web-services/index.html</guid><description>&lt;p>This page contains information, syntax, and simple code examples, about &lt;strong>Web Services&lt;/strong> in SpringBoot.&lt;/p></description></item><item><title>Testing in SpringBoot</title><link>http://example.org/languages/java/spring-boot/testing/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/testing/index.html</guid><description>&lt;p>This page contains information, syntax, and simple code examples, about testing in SpringBoot.&lt;/p></description></item></channel></rss>