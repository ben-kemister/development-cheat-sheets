<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>health on Development Cheat Sheets</title><link>http://example.org/tags/health/index.html</link><description>Recent content in health on Development Cheat Sheets</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="http://example.org/tags/health/index.xml" rel="self" type="application/rss+xml"/><item><title>SpringBoot Actuators</title><link>http://example.org/languages/java/spring-boot/actuator/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/actuator/index.html</guid><description>This page contains information, syntax, and simple code examples, about Springboots&amp;rsquo; actuator.
Springboots&amp;rsquo; actuator adds production-ready features to our application. When you add the actuator dependency functions such as monitoring, gathering metrics, understanding traffic, or the state of ths database becomes much much easier.
Adding Actuator To enable Spring Boot Actuator, just need add the spring-boot-actuator dependency to your project.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt;Endpoints There are a heap of endpoints available, but by default only the /health endpoint is exposed.</description></item><item><title>SpringBoot Task Scheduling</title><link>http://example.org/languages/java/spring-boot/scheduler/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/scheduler/index.html</guid><description>This page contains information, syntax, and simple code examples, about Springs&amp;rsquo; Task scheduling.
Basic Example First make sure to add the @EnableScheduling annotation to one of your configuration classes:
@Configuration @EnableScheduling public class MySpringConfig{ ... }@Component public class ScheduledTasks { private static final Logger log = LoggerFactory.getLogger(ScheduledTasks.class); private static final SimpleDateFormat dateFormat = new SimpleDateFormat(&amp;#34;HH:mm:ss&amp;#34;); @Scheduled(fixedRate = 5000) public void reportCurrentTime() { log.info(&amp;#34;The time is now {}&amp;#34;, dateFormat.format(new Date())); } }Troubleshooting My Scheduled Task runs twice Make sure that you do not use the @Scheduled annotation within a configuration class (such as one annotated with @Configuration).</description></item></channel></rss>