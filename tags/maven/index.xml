<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maven on Development Cheat Sheets</title><link>http://example.org/tags/maven/index.html</link><description>Recent content in maven on Development Cheat Sheets</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="http://example.org/tags/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>Maven</title><link>http://example.org/tools/maven/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/tools/maven/index.html</guid><description>&lt;p>Maven is a build automation tool used primarily for Java projects. Maven can also be used to build and manage projects written in C#, Ruby, Scala, and other languages. The Maven project is hosted by the Apache Software Foundation, where it was formerly part of the Jakarta Project.&lt;/p></description></item><item><title>SpringBoot Maven plugin</title><link>http://example.org/languages/java/spring-boot/maven-integration/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/maven-integration/index.html</guid><description>This page contains information, syntax, and simple code examples, about using the spring-boot-maven-plugin.
Creating runnable &amp;lsquo;fat&amp;rsquo; jar ... &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${springboot.version}&amp;lt;/version&amp;gt; &amp;lt;!-- Create a runnable fat jar --&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;repackage&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt;</description></item><item><title>SpringBoot Soap WS</title><link>http://example.org/languages/java/spring-boot/soap-ws/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/soap-ws/index.html</guid><description>This page contains information, syntax, and simple code examples, about creating (and using) SOAP ws services in SpringBoot.
Servlet Registration To be able to register (and expose) the servlet you will need to create a ServletRegistrationBean.
@EnableWs @Configuration public class CustomWsConfigurerAdapter extends WsConfigurerAdapter { @Bean(name = &amp;#34;helloServletRegistration&amp;#34;) public ServletRegistrationBean&amp;lt;MessaheDisplatcherServlet&amp;gt; helloServletRegistration(ApplicationContext applicationContext) { MessageDisplatcherServlet servlet = new MessageDisplatcherServlet(); servlet.setApplicationContext(applicationContext); servlet.setTransformWsdlLocations(true); servlet.setTransformSchemaLocations(true); // Log the request details servlet.setEnableLoggingRequestDetails(true); return new ServletRegistrationBean&amp;lt;&amp;gt;(servlet, &amp;#34;/ws/*&amp;#34;); } }Exposing the WSDL To expose the WSDL file within your application you will need to create a bean as follows:</description></item></channel></rss>