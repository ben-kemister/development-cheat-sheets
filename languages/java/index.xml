<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Development Cheat Sheets</title><link>http://example.org/languages/java/index.html</link><description>Recent content in Java on Development Cheat Sheets</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="http://example.org/languages/java/index.xml" rel="self" type="application/rss+xml"/><item><title>(Apache) Tomcat</title><link>http://example.org/languages/java/tomcat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/tomcat/index.html</guid><description>&lt;p>Apache Tomcat is a free and open-source implementation of the Jakarta Servlet, Jakarta Expression Language, and WebSocket technologies.
It provides a &amp;ldquo;pure Java&amp;rdquo; HTTP web server environment in which Java code can also run.&lt;/p></description></item><item><title>AssertJ</title><link>http://example.org/languages/java/assertj/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/assertj/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of the AssertJ test library. The AssertJ library is a fluent API to help create readable assertions within you Java unit tests.
Testing thrown exceptions - AssertThatThrownBy() import static org.assertj.core.api.Assertions.assertThatThrownBy; @Test void test_methodShouldThrowException(){ assertThatThrownBy(() -&amp;gt; { List&amp;lt;String&amp;gt; list = Arrays.asList(&amp;#34;String one&amp;#34;, &amp;#34;String two&amp;#34;); list.get(2); }).isInstanceOf(IndexOutOfBoundsException.class) .hasMessageContaining(&amp;#34;Index: 2, Size: 2&amp;#34;); } Testing methods that don&amp;rsquo;t return a value import static org.</description></item><item><title>Class</title><link>http://example.org/languages/java/class/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/class/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of Java&amp;rsquo;s Class class/API.
getCanonicalName() Returns the full classname including package.
LOGGER.info(&amp;#34;ClassName is: &amp;#34; + this.getClass().getCanonicalName());</description></item><item><title>Collections</title><link>http://example.org/languages/java/collections/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/collections/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of collections in Java.
Arrays Arrays.asList(array) Converts an array of objects into a list, great one-liner to use when you need to iterate over the array.
// Great way to create a collection within one line List&amp;lt;String&amp;gt; strings = Arrays.asList(&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;); Sets Copying/Cloning Sets Copy Constructor One way of copying a Set is to use the copy constructor of a Set implementation.</description></item><item><title>Concurrency</title><link>http://example.org/languages/java/concurrency/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/concurrency/index.html</guid><description>Java Concurrency This page contains information, syntax, and simple code examples, about the use of Java&amp;rsquo;s concurrency functionality.
Common ForkJoin Pool Java has a common static ForkJoin pool which is appropriate for most applications.
Using the common pool normally reduces resource usage (its threads are slowly reclaimed during periods of non-use, and reinstated upon subsequent use).
In practice what this means is there is an easy way to submit tasks to a background thread without needing to deal with the complexities of an ExecutorService.</description></item><item><title>Immutables</title><link>http://example.org/languages/java/immutables/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/immutables/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of the Immutables library.
Java annotation processors to generate simple, safe and consistent value objects. Do not repeat yourself, try Immutables, the most comprehensive tool in this field!</description></item><item><title>JavaFX</title><link>http://example.org/languages/java/javafx/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/javafx/index.html</guid><description>&lt;p>JavaFX is a software platform for creating and delivering desktop applications, as well as rich Internet applications (RIAs) that can run across a wide variety of devices. JavaFX is intended to replace Swing as the standard GUI library for Java SE.&lt;/p></description></item><item><title>JPA</title><link>http://example.org/languages/java/jpa/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/jpa/index.html</guid><description>Java Persistence API (JPA) This page contains information, syntax, and simple code examples, about the use of the Java Persistence API (JPA).
Case-insensitive like matching To make your query case-insensitive, convert both your keyword and the compared field to lower case:
query.where( builder.or( builder.like( builder.lower( root.get( type.getDeclaredSingularAttribute(&amp;#34;username&amp;#34;, String.class) ) ), &amp;#34;%&amp;#34; + keyword.toLowerCase() + &amp;#34;%&amp;#34; ) ); &amp;#39;&amp;#39;&amp;#39;</description></item><item><title>NIO2</title><link>http://example.org/languages/java/nio_2/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/nio_2/index.html</guid><description>This page contains information, syntax, and simple code examples, about the use of Java&amp;rsquo;s NIO2 API.
The new API was introduced in Java 7 and provides methods that make working with files and filesystems much easier.
Current Directory The Paths API can be used to get the current working directory:
String workingDirectory = Paths.get(&amp;#34;&amp;#34;) .toAbsolutePath() .toString(); System.out.println(&amp;#34;PWD: &amp;#34; + workingDirectory);</description></item><item><title>Record</title><link>http://example.org/languages/java/record/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/record/index.html</guid><description>&lt;p>&lt;a href="https://docs.oracle.com/en/java/javase/14/language/records.html" target="_blank">Records&lt;/a> were introduced in JDK 14 and are a new type
to assist with creating &amp;lsquo;data carrier&amp;rsquo; objects.&lt;/p></description></item><item><title>Spring Boot</title><link>http://example.org/languages/java/spring-boot/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/java/spring-boot/index.html</guid><description>&lt;p>The index page for about the use of Spring Boot.&lt;/p></description></item></channel></rss>