<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on Development Cheat Sheets</title><link>http://example.org/languages/typescript/index.html</link><description>Recent content in TypeScript on Development Cheat Sheets</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="http://example.org/languages/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Syntax</title><link>http://example.org/languages/typescript/syntax/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/typescript/syntax/index.html</guid><description>This page contains information about the basics of TypeScript syntax.
Describing your code with types The general rule of thumb about using types is the more information you can provide the more the tooling will be able to help you.
Variables Simply add a semicolon after the variable name and then the type.
let trackingNumber: string = &amp;#39;FD1234567&amp;#39;; let createDate: Date = new Date(); Functions and parameters function getItem(trackingNumber: string): object { // Do stuff in here.</description></item><item><title>Tools</title><link>http://example.org/languages/typescript/tools/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/typescript/tools/index.html</guid><description>This page contains information about handy (or popular) Typescript tools.
Transpilers and Compliers TypeScript has its own complier to convert TypeScript into vanilla JavaScript.</description></item><item><title>Transpiler</title><link>http://example.org/languages/typescript/transpiler/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/typescript/transpiler/index.html</guid><description>This page contains some information about the TypeScript transpiler.
tsconfig.json The presence of a tsconfig.json file in a directory indicates that the directory is the root of a TypeScript project. The tsconfig.json file specifies the root files and the transpiler options to use when transpiling the project into JavaScript.
target property Sets the ES version to transpile the TypeScript code to when
tsc tsc is the command to start the TypeScript Transpiler.</description></item></channel></rss>