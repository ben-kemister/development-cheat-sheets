<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Development Cheat Sheets</title><link>http://example.org/languages/python/index.html</link><description>Recent content in Python on Development Cheat Sheets</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="http://example.org/languages/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Design patterns</title><link>http://example.org/languages/python/design_patterns/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/python/design_patterns/index.html</guid><description>This page contains information and simple code examples about some useful design patterns in Python
Singleton Pattern A Singleton pattern in python is a design pattern that allows you to create just one instance of a class, throughout the lifetime of a program. Using a singleton pattern has many benefits. A few of them are:
To limit concurrent access to a shared resource. To create a global point of access for a resource.</description></item><item><title>File operations</title><link>http://example.org/languages/python/file_operations/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/languages/python/file_operations/index.html</guid><description>This page contains information and simple code examples about using Python to interact with the file system.
File exists() The OS module in Python lets us interact with the operating system. This comes under Python’s standard utility modules and gives a portable way to use the dependent functions of the operating system. The exists() function in Python exists in the os.path module, which is a submodule of the python’s OS module and is used to check if a particular file exists or not.</description></item></channel></rss>